<?php
/**
 * OtherApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Duda
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OtherApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OtherApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for sitesMultiscreenBackupsSiteNameBackupNameDelete
     *
     * Deletes an existing backup from a Site..
     *
     */
    public function testSitesMultiscreenBackupsSiteNameBackupNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sitesMultiscreenBackupsSiteNameCreatePost
     *
     * Create a new backup of a site. This is used for saving the existing state of a site. Good for saving a restore point before a user starts to edit a site or after work has been completed..
     *
     */
    public function testSitesMultiscreenBackupsSiteNameCreatePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sitesMultiscreenBackupsSiteNameGet
     *
     * Get an array of existing site backups.
     *
     */
    public function testSitesMultiscreenBackupsSiteNameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sitesMultiscreenBackupsSiteNameRestoreBackupNamePost
     *
     * Restore a site from an existing backup. This will fully restore the site back to the state it was in at the time of the backup creation. When restoring a site, a backup is automatically made before the restore begins..
     *
     */
    public function testSitesMultiscreenBackupsSiteNameRestoreBackupNamePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sitesMultiscreenSiteNameCertificateDelete
     *
     * Delete a certificate that has been generated for a website. This will ensure that the website is served over only an HTTP (insecure) connection and will delete the generated certificate..
     *
     */
    public function testSitesMultiscreenSiteNameCertificateDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sitesMultiscreenSiteNameCertificatePost
     *
     * Generate a SSL certificate for a specific website..
     *
     */
    public function testSitesMultiscreenSiteNameCertificatePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sitesMultiscreenSiteNameCertificateRenewPost
     *
     * Starts the renewal process for an SSL certificate.
     *
     */
    public function testSitesMultiscreenSiteNameCertificateRenewPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
