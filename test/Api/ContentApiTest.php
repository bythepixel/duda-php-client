<?php
/**
 * ContentApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Duda
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ContentApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ContentApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createInjectedContent
     *
     * Content injection provides the ability to update a website directly via the API..
     *
     */
    public function testCreateInjectedContent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createInjectedContentSinglePage
     *
     * Content injection provides the ability to update a page on a website directly via the API..
     *
     */
    public function testCreateInjectedContentSinglePage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createLocation
     *
     * Create a new location for a website. This location will be apart of the additional_locations object that is returned from a site's content library..
     *
     */
    public function testCreateLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteLocation
     *
     * Delete an existing location.
     *
     */
    public function testDeleteLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContentLibrary
     *
     * Get the data that exists within the content library of a website..
     *
     */
    public function testGetContentLibrary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInjectedContent
     *
     * Search the website for all references of the data-inject value, either in the HTML or CSS of the website..
     *
     */
    public function testGetInjectedContent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLocation
     *
     * Get data for a specific location..
     *
     */
    public function testGetLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for publishContentLibrary
     *
     * Push updates already within the content library directly to the live version of the website. This pushes the data that exists within the content library to the live/published version of the website..
     *
     */
    public function testPublishContentLibrary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateContentLibrary
     *
     * Update the data that exists within the content library. Once updated the data is ready for immediate use within the editor..
     *
     */
    public function testUpdateContentLibrary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateLocation
     *
     * Update an existing location within the content library. You can only update additional_locations that exist as part of the content library..
     *
     */
    public function testUpdateLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadResource
     *
     * Upload a resource to the website from an external source. Resource is uploaded to Duda's CDN and made available to anyone building the website..
     *
     */
    public function testUploadResource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
